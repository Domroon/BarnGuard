2021-10-18 10:21:44,998 [INFO] main: FOUND VIDEO "VD_00006.MP4"
2021-10-18 10:21:45,010 [INFO] main: RENAME "VD_00006.MP4" to "YkAbpp6j69E.mp4"
2021-10-18 10:21:45,011 [INFO] main: UPLOAD START "YkAbpp6j69E.mp4"
2021-10-18 10:21:47,227 [INFO] main: VIDEO RESPONSE: 
RESPONSE CODE: 200
RESPONSE BODY: "200"
2021-10-18 10:21:47,241 [ERROR] main: Upload Video Json Error: 
HTTPConnectionPool(host='%7bnetwork_address%7d', port=80): Max retries exceeded with url: /api/videos (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f664c6f2a30>: Failed to establish a new connection: [Errno -2] Name or service not known'))
2021-10-18 10:21:47,241 [ERROR] main: CONNECTION ERROR Try again in 5s: 
 HTTPConnectionPool(host='%7bnetwork_address%7d', port=80): Max retries exceeded with url: /api/videos (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f664c6f2a30>: Failed to establish a new connection: [Errno -2] Name or service not known'))
2021-10-18 10:21:52,247 [INFO] main: UPLOAD START "YkAbpp6j69E.mp4"
2021-10-18 10:21:52,249 [ERROR] main: Upload Video Error: 
[Errno 2] No such file or directory: '/media/sf_workspace/barn-guard-website/wildcam_software/upload_ready/YkAbpp6j69E.mp4'
2021-10-18 10:21:52,249 [ERROR] main: FileNotFoundError "The file has already been uploaded"
2021-10-18 10:24:37,068 [INFO] main: FOUND VIDEO "VD_00006.MP4"
2021-10-18 10:24:37,081 [INFO] main: RENAME "VD_00006.MP4" to "fO1c91ZkTR8.mp4"
2021-10-18 10:24:37,086 [INFO] main: UPLOAD START "fO1c91ZkTR8.mp4"
2021-10-18 10:24:39,327 [INFO] main: VIDEO RESPONSE: 
RESPONSE CODE: 200
RESPONSE BODY: "200"
2021-10-18 10:24:39,717 [INFO] main: VIDEO_JSON RESPONSE: 
RESPONSE CODE: 201
RESPONSE BODY: ""fO1c91ZkTR8.mp4"" successfully created"
2021-10-18 10:24:39,718 [INFO] main: UPLOAD END "fO1c91ZkTR8.mp4"
2021-10-18 10:34:08,490 [INFO] main: FOUND VIDEO "VD_00003.MP4"
2021-10-18 10:34:08,500 [INFO] main: RENAME "VD_00003.MP4" to "rETXFF6VNLo.mp4"
2021-10-18 10:34:08,504 [INFO] main: UPLOAD START "rETXFF6VNLo.mp4"
2021-10-18 10:35:04,293 [INFO] main: VIDEO RESPONSE: 
RESPONSE CODE: 500
RESPONSE BODY: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>OSError: MoviePy error: failed to read the duration of file /root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4.
Here are the file infos returned by ffmpeg:

ffmpeg version 4.2.2-static https://johnvansickle.com/ffmpeg/  Copyright (c) 2000-2019 the FFmpeg developers
  built with gcc 8 (Debian 8.3.0-6)
  configuration: --enable-gpl --enable-version3 --enable-static --disable-debug --disable-ffplay --disable-indev=sndio --disable-outdev=sndio --cc=gcc --enable-fontconfig --enable-frei0r --enable-gnutls --enable-gmp --enable-libgme --enable-gray --enable-libaom --enable-libfribidi --enable-libass --enable-libvmaf --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-librubberband --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libvorbis --enable-libopus --enable-libtheora --enable-libvidstab --enable-libvo-amrwbenc --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libdav1d --enable-libxvid --enable-libzvbi --enable-libzimg
  libavutil      56. 31.100 / 56. 31.100
  libavcodec     58. 54.100 / 58. 54.100
  libavformat    58. 29.100 / 58. 29.100
  libavdevice    58.  8.100 / 58.  8.100
  libavfilter     7. 57.100 /  7. 57.100
  libswscale      5.  5.100 /  5.  5.100
  libswresample   3.  5.100 /  3.  5.100
  libpostproc    55.  5.100 / 55.  5.100
Input #0, h264, from '/root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4':
  Duration: N/A, bitrate: N/A
    Stream #0:0: Video: h264 (High), yuv420p(progressive), 640x480, 25 fps, 25 tbr, 1200k tbn, 50 tbc
At least one output file must be specified // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 139837184343232,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "Y5LeSo5cFHDYjOJT2Gdd";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>OSError</h1>
<div class="detail">
  <p class="errormsg">OSError: MoviePy error: failed to read the duration of file /root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4.
Here are the file infos returned by ffmpeg:

ffmpeg version 4.2.2-static https://johnvansickle.com/ffmpeg/  Copyright (c) 2000-2019 the FFmpeg developers
  built with gcc 8 (Debian 8.3.0-6)
  configuration: --enable-gpl --enable-version3 --enable-static --disable-debug --disable-ffplay --disable-indev=sndio --disable-outdev=sndio --cc=gcc --enable-fontconfig --enable-frei0r --enable-gnutls --enable-gmp --enable-libgme --enable-gray --enable-libaom --enable-libfribidi --enable-libass --enable-libvmaf --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-librubberband --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libvorbis --enable-libopus --enable-libtheora --enable-libvidstab --enable-libvo-amrwbenc --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libdav1d --enable-libxvid --enable-libzvbi --enable-libzimg
  libavutil      56. 31.100 / 56. 31.100
  libavcodec     58. 54.100 / 58. 54.100
  libavformat    58. 29.100 / 58. 29.100
  libavdevice    58.  8.100 / 58.  8.100
  libavfilter     7. 57.100 /  7. 57.100
  libswscale      5.  5.100 /  5.  5.100
  libswresample   3.  5.100 /  3.  5.100
  libpostproc    55.  5.100 / 55.  5.100
Input #0, h264, from '/root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4':
  Duration: N/A, bitrate: N/A
    Stream #0:0: Video: h264 (High), yuv420p(progressive), 640x480, 25 fps, 25 tbr, 1200k tbn, 50 tbc
At least one output file must be specified</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-139836928640840">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py"</cite>,
      line <em class="line">286</em>,
      in <code class="function">ffmpeg_parse_infos</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>keyword = ('frame=' if is_GIF else 'Duration: ')</pre>
<pre class="line before"><span class="ws">            </span># for large GIFS the &quot;full&quot; duration is presented as the last element in the list.</pre>
<pre class="line before"><span class="ws">            </span>index = -1 if is_GIF else 0</pre>
<pre class="line before"><span class="ws">            </span>line = [l for l in lines if keyword in l][index]</pre>
<pre class="line current"><span class="ws">            </span>match = re.findall(&quot;([0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9])&quot;, line)[0]</pre>
<pre class="line after"><span class="ws">            </span>result['duration'] = cvsecs(match)</pre>
<pre class="line after"><span class="ws">        </span>except:</pre>
<pre class="line after"><span class="ws">            </span>raise IOError((&quot;MoviePy error: failed to read the duration of file %s.\n&quot;</pre>
<pre class="line after"><span class="ws">                           </span>&quot;Here are the file infos returned by ffmpeg:\n\n%s&quot;)%(</pre>
<pre class="line after"><span class="ws">                              </span>filename, infos))</pre></div>
</div>

<li><div class="exc-divider">During handling of the above exception, another exception occurred:</div>
<li><div class="frame" id="frame-139837184341944">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">2464</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-139836928609920">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">2450</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-139836928577664">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask_cors/extension.py"</cite>,
      line <em class="line">165</em>,
      in <code class="function">wrapped_function</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>
<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>
<pre class="line before"><span class="ws">        </span>if options.get('intercept_exceptions', True):</pre>
<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>
<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>
<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))</pre>
<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if hasattr(app, 'handle_exception'):</pre>
<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>
<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>
</div>

<li><div class="frame" id="frame-139836928609976">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1867</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-139836928580016">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-139836928640112">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">2447</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-139836928640224">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1952</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-139836928640280">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask_cors/extension.py"</cite>,
      line <em class="line">165</em>,
      in <code class="function">wrapped_function</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>
<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>
<pre class="line before"><span class="ws">        </span>if options.get('intercept_exceptions', True):</pre>
<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>
<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>
<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))</pre>
<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if hasattr(app, 'handle_exception'):</pre>
<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>
<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>
</div>

<li><div class="frame" id="frame-139836928639888">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1821</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-139836928640392">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-139836928640168">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1950</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-139836928640504">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1936</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-139836928640560">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/run.py"</cite>,
      line <em class="line">129</em>,
      in <code class="function">upload_file</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>return &quot;400&quot;</pre>
<pre class="line before"><span class="ws">    </span>file = request.files['file']</pre>
<pre class="line before"><span class="ws">    </span>if file and allowed_file(file.filename):</pre>
<pre class="line before"><span class="ws">        </span>filename = file.filename</pre>
<pre class="line before"><span class="ws">        </span>file.save(os.path.join(flask_app.config['VIDEO_FOLDER'], filename))</pre>
<pre class="line current"><span class="ws">        </span>manage_thumbnails()</pre>
<pre class="line after"><span class="ws">        </span>return &quot;200&quot;</pre>
<pre class="line after"><span class="ws">    </span>else:</pre>
<pre class="line after"><span class="ws">        </span>logger.warning('videotype in post-request &quot;/upload&quot; is not correct')</pre>
<pre class="line after"><span class="ws">        </span>return &quot;415&quot;</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-139836928640336">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/run.py"</cite>,
      line <em class="line">78</em>,
      in <code class="function">manage_thumbnails</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>while True:</pre>
<pre class="line before"><span class="ws">        </span>dir_list = os.listdir(TARGETS[&quot;video&quot;])</pre>
<pre class="line before"><span class="ws">        </span>if dir_list:</pre>
<pre class="line before"><span class="ws">            </span>video_path = TARGETS[&quot;video&quot;] / dir_list[0]</pre>
<pre class="line before"><span class="ws">            </span>thumbnail_path = (TARGETS[&quot;thumbnail&quot;] / video_path.name).with_suffix('.jpg')</pre>
<pre class="line current"><span class="ws">            </span>generate_thumbnail(video_path, thumbnail_path)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># move the videofile out of new-Folder</pre>
<pre class="line after"><span class="ws">            </span>destination_folder = TARGETS[&quot;video-move&quot;]</pre>
<pre class="line after"><span class="ws">            </span>logger.debug(f'Move Video to &quot;{destination_folder}&quot;')</pre>
<pre class="line after"><span class="ws">            </span>shutil.move(str(video_path), str(destination_folder))</pre></div>
</div>

<li><div class="frame" id="frame-139836928640448">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/run.py"</cite>,
      line <em class="line">67</em>,
      in <code class="function">generate_thumbnail</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>thumbnail_jpg = Image.fromarray(frame)</pre>
<pre class="line before"><span class="ws">        </span>logger.debug(f'Save Thumbnail Picture at: &quot;{thumbnail_path}&quot;')</pre>
<pre class="line before"><span class="ws">        </span>thumbnail_jpg.save(thumbnail_path)</pre>
<pre class="line before"><span class="ws">    </span>except Exception as error:</pre>
<pre class="line before"><span class="ws">        </span>logger.error(error)</pre>
<pre class="line current"><span class="ws">        </span>raise error</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>def manage_thumbnails():</pre>
<pre class="line after"><span class="ws">    </span>logger.info('generate thumbnail')</pre>
<pre class="line after"><span class="ws">     </span># videonames are a random hash number</pre></div>
</div>

<li><div class="frame" id="frame-139836928640616">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/run.py"</cite>,
      line <em class="line">60</em>,
      in <code class="function">generate_thumbnail</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span>logger.info(&quot;START&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def generate_thumbnail(video_path, thumbnail_path):</pre>
<pre class="line before"><span class="ws">    </span>print(f'Get Thumbnail Picture from the Video: &quot;{video_path}&quot;')</pre>
<pre class="line before"><span class="ws">    </span>try:</pre>
<pre class="line current"><span class="ws">        </span>with VideoFileClip(str(video_path)) as video:</pre>
<pre class="line after"><span class="ws">            </span>frame = video.get_frame(0)</pre>
<pre class="line after"><span class="ws">        </span>thumbnail_jpg = Image.fromarray(frame)</pre>
<pre class="line after"><span class="ws">        </span>logger.debug(f'Save Thumbnail Picture at: &quot;{thumbnail_path}&quot;')</pre>
<pre class="line after"><span class="ws">        </span>thumbnail_jpg.save(thumbnail_path)</pre>
<pre class="line after"><span class="ws">    </span>except Exception as error:</pre></div>
</div>

<li><div class="frame" id="frame-139836928640672">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/VideoFileClip.py"</cite>,
      line <em class="line">91</em>,
      in <code class="function">__init__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># Make a reader</pre>
<pre class="line before"><span class="ws">        </span>pix_fmt = &quot;rgba&quot; if has_mask else &quot;rgb24&quot;</pre>
<pre class="line before"><span class="ws">        </span>self.reader = FFMPEG_VideoReader(filename, pix_fmt=pix_fmt,</pre>
<pre class="line before"><span class="ws">                                         </span>target_resolution=target_resolution,</pre>
<pre class="line before"><span class="ws">                                         </span>resize_algo=resize_algorithm,</pre>
<pre class="line current"><span class="ws">                                         </span>fps_source=fps_source)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span># Make some of the reader's attributes accessible from the clip</pre>
<pre class="line after"><span class="ws">        </span>self.duration = self.reader.duration</pre>
<pre class="line after"><span class="ws">        </span>self.end = self.reader.duration</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-139836928639944">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py"</cite>,
      line <em class="line">36</em>,
      in <code class="function">__init__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                 </span>fps_source='tbr'):</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>self.filename = filename</pre>
<pre class="line before"><span class="ws">        </span>self.proc = None</pre>
<pre class="line before"><span class="ws">        </span>infos = ffmpeg_parse_infos(filename, print_infos, check_duration,</pre>
<pre class="line current"><span class="ws">                                   </span>fps_source)</pre>
<pre class="line after"><span class="ws">        </span>self.fps = infos['video_fps']</pre>
<pre class="line after"><span class="ws">        </span>self.size = infos['video_size']</pre>
<pre class="line after"><span class="ws">        </span>self.rotation = infos['video_rotation']</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if target_resolution:</pre></div>
</div>

<li><div class="frame" id="frame-139836928640056">
  <h4>File <cite class="filename">"/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py"</cite>,
      line <em class="line">291</em>,
      in <code class="function">ffmpeg_parse_infos</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>match = re.findall(&quot;([0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9])&quot;, line)[0]</pre>
<pre class="line before"><span class="ws">            </span>result['duration'] = cvsecs(match)</pre>
<pre class="line before"><span class="ws">        </span>except:</pre>
<pre class="line before"><span class="ws">            </span>raise IOError((&quot;MoviePy error: failed to read the duration of file %s.\n&quot;</pre>
<pre class="line before"><span class="ws">                           </span>&quot;Here are the file infos returned by ffmpeg:\n\n%s&quot;)%(</pre>
<pre class="line current"><span class="ws">                              </span>filename, infos))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># get the output line that speaks about video</pre>
<pre class="line after"><span class="ws">    </span>lines_video = [l for l in lines if ' Video: ' in l and re.search('\d+x\d+', l)]</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>result['video_found'] = ( lines_video != [] )</pre></div>
</div>
</ul>
  <blockquote>OSError: MoviePy error: failed to read the duration of file /root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4.
Here are the file infos returned by ffmpeg:

ffmpeg version 4.2.2-static https://johnvansickle.com/ffmpeg/  Copyright (c) 2000-2019 the FFmpeg developers
  built with gcc 8 (Debian 8.3.0-6)
  configuration: --enable-gpl --enable-version3 --enable-static --disable-debug --disable-ffplay --disable-indev=sndio --disable-outdev=sndio --cc=gcc --enable-fontconfig --enable-frei0r --enable-gnutls --enable-gmp --enable-libgme --enable-gray --enable-libaom --enable-libfribidi --enable-libass --enable-libvmaf --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-librubberband --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libvorbis --enable-libopus --enable-libtheora --enable-libvidstab --enable-libvo-amrwbenc --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libdav1d --enable-libxvid --enable-libzvbi --enable-libzimg
  libavutil      56. 31.100 / 56. 31.100
  libavcodec     58. 54.100 / 58. 54.100
  libavformat    58. 29.100 / 58. 29.100
  libavdevice    58.  8.100 / 58.  8.100
  libavfilter     7. 57.100 /  7. 57.100
  libswscale      5.  5.100 /  5.  5.100
  libswresample   3.  5.100 /  3.  5.100
  libpostproc    55.  5.100 / 55.  5.100
Input #0, h264, from '/root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4':
  Duration: N/A, bitrate: N/A
    Stream #0:0: Video: h264 (High), yuv420p(progressive), 640x480, 25 fps, 25 tbr, 1200k tbn, 50 tbc
At least one output file must be specified</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py&quot;, line 286, in ffmpeg_parse_infos
    match = re.findall(&quot;([0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9])&quot;, line)[0]
IndexError: list index out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py&quot;, line 2464, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py&quot;, line 2450, in wsgi_app
    response = self.handle_exception(e)
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask_cors/extension.py&quot;, line 165, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py&quot;, line 1867, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py&quot;, line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py&quot;, line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask_cors/extension.py&quot;, line 165, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py&quot;, line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py&quot;, line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py&quot;, line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;/root/barn-guard-website/backend/run.py&quot;, line 129, in upload_file
    manage_thumbnails()
  File &quot;/root/barn-guard-website/backend/run.py&quot;, line 78, in manage_thumbnails
    generate_thumbnail(video_path, thumbnail_path)
  File &quot;/root/barn-guard-website/backend/run.py&quot;, line 67, in generate_thumbnail
    raise error
  File &quot;/root/barn-guard-website/backend/run.py&quot;, line 60, in generate_thumbnail
    with VideoFileClip(str(video_path)) as video:
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/VideoFileClip.py&quot;, line 91, in __init__
    fps_source=fps_source)
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py&quot;, line 36, in __init__
    fps_source)
  File &quot;/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py&quot;, line 291, in ffmpeg_parse_infos
    filename, infos))
OSError: MoviePy error: failed to read the duration of file /root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4.
Here are the file infos returned by ffmpeg:

ffmpeg version 4.2.2-static https://johnvansickle.com/ffmpeg/  Copyright (c) 2000-2019 the FFmpeg developers
  built with gcc 8 (Debian 8.3.0-6)
  configuration: --enable-gpl --enable-version3 --enable-static --disable-debug --disable-ffplay --disable-indev=sndio --disable-outdev=sndio --cc=gcc --enable-fontconfig --enable-frei0r --enable-gnutls --enable-gmp --enable-libgme --enable-gray --enable-libaom --enable-libfribidi --enable-libass --enable-libvmaf --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-librubberband --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libvorbis --enable-libopus --enable-libtheora --enable-libvidstab --enable-libvo-amrwbenc --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libdav1d --enable-libxvid --enable-libzvbi --enable-libzimg
  libavutil      56. 31.100 / 56. 31.100
  libavcodec     58. 54.100 / 58. 54.100
  libavformat    58. 29.100 / 58. 29.100
  libavdevice    58.  8.100 / 58.  8.100
  libavfilter     7. 57.100 /  7. 57.100
  libswscale      5.  5.100 /  5.  5.100
  libswresample   3.  5.100 /  3.  5.100
  libpostproc    55.  5.100 / 55.  5.100
Input #0, h264, from '/root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4':
  Duration: N/A, bitrate: N/A
    Stream #0:0: Video: h264 (High), yuv420p(progressive), 640x480, 25 fps, 25 tbr, 1200k tbn, 50 tbc
At least one output file must be specified</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py", line 286, in ffmpeg_parse_infos
    match = re.findall("([0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9])", line)[0]
IndexError: list index out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py", line 2464, in __call__
    return self.wsgi_app(environ, start_response)
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py", line 2450, in wsgi_app
    response = self.handle_exception(e)
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask_cors/extension.py", line 165, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py", line 1867, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask_cors/extension.py", line 165, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/root/barn-guard-website/backend/run.py", line 129, in upload_file
    manage_thumbnails()
  File "/root/barn-guard-website/backend/run.py", line 78, in manage_thumbnails
    generate_thumbnail(video_path, thumbnail_path)
  File "/root/barn-guard-website/backend/run.py", line 67, in generate_thumbnail
    raise error
  File "/root/barn-guard-website/backend/run.py", line 60, in generate_thumbnail
    with VideoFileClip(str(video_path)) as video:
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/VideoFileClip.py", line 91, in __init__
    fps_source=fps_source)
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py", line 36, in __init__
    fps_source)
  File "/root/barn-guard-website/backend/venv/lib/python3.7/site-packages/moviepy/video/io/ffmpeg_reader.py", line 291, in ffmpeg_parse_infos
    filename, infos))
OSError: MoviePy error: failed to read the duration of file /root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4.
Here are the file infos returned by ffmpeg:

ffmpeg version 4.2.2-static https://johnvansickle.com/ffmpeg/  Copyright (c) 2000-2019 the FFmpeg developers
  built with gcc 8 (Debian 8.3.0-6)
  configuration: -enable-gpl -enable-version3 -enable-static -disable-debug -disable-ffplay -disable-indev=sndio -disable-outdev=sndio -cc=gcc -enable-fontconfig -enable-frei0r -enable-gnutls -enable-gmp -enable-libgme -enable-gray -enable-libaom -enable-libfribidi -enable-libass -enable-libvmaf -enable-libfreetype -enable-libmp3lame -enable-libopencore-amrnb -enable-libopencore-amrwb -enable-libopenjpeg -enable-librubberband -enable-libsoxr -enable-libspeex -enable-libsrt -enable-libvorbis -enable-libopus -enable-libtheora -enable-libvidstab -enable-libvo-amrwbenc -enable-libvpx -enable-libwebp -enable-libx264 -enable-libx265 -enable-libxml2 -enable-libdav1d -enable-libxvid -enable-libzvbi -enable-libzimg
  libavutil      56. 31.100 / 56. 31.100
  libavcodec     58. 54.100 / 58. 54.100
  libavformat    58. 29.100 / 58. 29.100
  libavdevice    58.  8.100 / 58.  8.100
  libavfilter     7. 57.100 /  7. 57.100
  libswscale      5.  5.100 /  5.  5.100
  libswresample   3.  5.100 /  3.  5.100
  libpostproc    55.  5.100 / 55.  5.100
Input #0, h264, from '/root/barn-guard-website/backend/video-data/new/0B2TctlWBTc.mp4':
  Duration: N/A, bitrate: N/A
    Stream #0:0: Video: h264 (High), yuv420p(progressive), 640x480, 25 fps, 25 tbr, 1200k tbn, 50 tbc
At least one output file must be specified

-->
"
2021-10-18 10:35:04,441 [INFO] main: VIDEO_JSON RESPONSE: 
RESPONSE CODE: 201
RESPONSE BODY: ""rETXFF6VNLo.mp4"" successfully created"
2021-10-18 10:35:04,444 [INFO] main: UPLOAD END "rETXFF6VNLo.mp4"
2021-10-18 10:54:14,871 [INFO] main: FOUND VIDEO "rETXFF6VNLo.mp4"
2021-10-18 10:54:14,891 [INFO] main: RENAME "rETXFF6VNLo.mp4" to "IouXJoyPs2E.mp4"
2021-10-18 10:54:14,892 [INFO] main: UPLOAD START "IouXJoyPs2E.mp4"
2021-10-18 10:54:46,379 [INFO] main: VIDEO RESPONSE: 
RESPONSE CODE: 200
RESPONSE BODY: "200"
2021-10-18 10:54:46,549 [INFO] main: VIDEO_JSON RESPONSE: 
RESPONSE CODE: 201
RESPONSE BODY: ""IouXJoyPs2E.mp4"" successfully created"
2021-10-18 10:54:46,552 [INFO] main: UPLOAD END "IouXJoyPs2E.mp4"
2021-10-18 11:06:28,197 [INFO] main: FOUND VIDEO "VD_00015.MP4"
2021-10-18 11:06:44,184 [INFO] main: FOUND VIDEO "VD_00015.MP4"
2021-10-18 11:06:44,202 [INFO] main: RENAME "VD_00015.MP4" to "e7PiT8Q-igk.mp4"
2021-10-18 11:06:44,203 [INFO] main: UPLOAD START "e7PiT8Q-igk.mp4"
2021-10-18 11:07:11,974 [INFO] main: VIDEO RESPONSE: 
RESPONSE CODE: 200
RESPONSE BODY: "200"
2021-10-18 11:07:12,095 [INFO] main: VIDEO_JSON RESPONSE: 
RESPONSE CODE: 201
RESPONSE BODY: ""e7PiT8Q-igk.mp4"" successfully created"
2021-10-18 11:07:12,099 [INFO] main: UPLOAD END "e7PiT8Q-igk.mp4"
2021-10-20 12:26:14,185 [INFO] main: START wildcam software
2021-10-20 12:30:54,722 [INFO] main: START wildcam software
2021-10-20 12:31:51,526 [INFO] main: START wildcam software
2021-10-20 12:32:17,753 [INFO] main: START wildcam software!
2021-10-20 12:32:49,891 [INFO] main: START wildcam software
2021-10-20 12:34:16,639 [INFO] main: START wildcam software
2021-10-20 12:34:16,641 [DEBUG] main: WAITING for Videofile at "/media/sf_workspace/barn-guard-website/wildcam_software/videos"
2021-10-20 12:35:00,070 [INFO] main: START wildcam software
2021-10-20 12:58:19,192 [ERROR] main: No module named 'RPi'
2021-10-20 12:58:19,194 [INFO] main: START wildcam software
2021-10-20 12:58:19,194 [DEBUG] main: WAITING for Videofile at "/media/sf_workspace/barn-guard-website/wildcam_software/videos"
2021-10-20 13:00:02,104 [ERROR] main: No module named 'RPi'
2021-10-20 13:00:02,106 [INFO] main: START wildcam software
2021-10-20 13:00:02,107 [DEBUG] main: WAITING for Videofile at "/media/sf_workspace/barn-guard-website/wildcam_software/videos"
2021-10-20 13:02:21,292 [ERROR] main: No module named 'RPi'
2021-10-20 13:02:58,276 [CRITICAL] main: No module named 'RPi'
2021-10-20 13:03:31,047 [CRITICAL] main: No module named 'RPi'
2021-10-20 13:03:47,859 [CRITICAL] main: No module named 'RPi'
2021-10-20 13:04:29,245 [CRITICAL] main: No module named 'RPi'
Please run the Program on a RaspberryPi
